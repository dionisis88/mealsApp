package Forms;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import Classes.MealsData1;
import com.google.gson.Gson;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import javax.persistence.*;


/**
 *
 * @author mkape
 */
public class MealsData extends javax.swing.JFrame {
    MealsData1 meals;
    static EntityManagerFactory emf;
    static EntityManager em;
    private static void createEMFandEM(){
        emf = Persistence.createEntityManagerFactory("MeasDBPU");
        em = emf.createEntityManager();
    }
    /**
     * Creates new form MealsData
     */
    public MealsData() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        NameOfMeal = new javax.swing.JTextField();
        SearchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Instructions = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Δεδομένα γεύματος");
        setBackground(new java.awt.Color(204, 255, 255));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("       Όνομα Γεύματος");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        NameOfMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameOfMealActionPerformed(evt);
            }
        });

        SearchBtn.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        SearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/free-search-icon-2911-thumb.png"))); // NOI18N
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        DataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Όνομα", "Κατηγορία", "Περιοχή"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        DataTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        DataTable.setEnabled(false);
        DataTable.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                DataTableAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(DataTable);

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setText("Οδηγίες παρασκευής γεύματος");

        Instructions.setColumns(20);
        Instructions.setLineWrap(true);
        Instructions.setRows(5);
        Instructions.setWrapStyleWord(true);
        Instructions.setEnabled(false);
        jScrollPane3.setViewportView(Instructions);

        jButton1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton1.setText("Επεξεργασία δεδομένων γεύματος");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton2.setText("ΔΙαγραφή δεδομένων γεύματος");
        jButton2.setPreferredSize(new java.awt.Dimension(234, 25));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton3.setText("Αποθήκευση στην ΒΔ");
        jButton3.setPreferredSize(new java.awt.Dimension(234, 25));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name List"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane4.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(288, 288, 288)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(NameOfMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(85, 85, 85)
                                        .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(550, 550, 550))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(NameOfMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NameOfMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameOfMealActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameOfMealActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
        if(NameOfMeal.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Παρακαλώ γράψτε ένα όνομα");
        }
        else
            SearchMeal(NameOfMeal.getText());
            

    }//GEN-LAST:event_SearchBtnActionPerformed

    private void DataTableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_DataTableAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_DataTableAncestorAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog (null, "Προσοχή τα δεδομένα θα τροποποιηθούν","Προειδοποίηση",JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){
        Instructions.setEnabled(rootPaneCheckingEnabled);
        DataTable.setEnabled(rootPaneCheckingEnabled);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       
        int dialogResult = JOptionPane.showConfirmDialog (null, "Προσοχή τα δεδομένα θα διαγραφούν","Προειδοποίηση",JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){
            if(FindRecord(meals.getMeals().get(jTable1.getSelectedRow()).getstrMeal())==true)
        DeleteData(meals.getMeals().get(jTable1.getSelectedRow()).getstrMeal());
        else {
            JOptionPane.showMessageDialog(null,"Δεν υπάρχουν εγγραφές");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        int i =jTable1.getSelectedRow();
        if(FindRecord(meals.getMeals().get(i).getstrMeal())==false){
            insertdata(DataTable.getValueAt(0, 0).toString(),DataTable.getValueAt(0, 2).toString(), DataTable.getValueAt(0, 1).toString(),Instructions.getText(),1);
            JOptionPane.showMessageDialog(null,"Η αποθήκευση ολοκληρώθηκε επιτυχώς");
        }
        else if(FindRecord(meals.getMeals().get(i).getstrMeal())==true){
            Data d= new Data();
            d.setArea(FindRecord1(meals.getMeals().get(i).getstrMeal()).getArea());
            d.setCategory(FindRecord1(meals.getMeals().get(i).getstrMeal()).getCategory());
            d.setInstructions(FindRecord1(meals.getMeals().get(i).getstrMeal()).getInstructions());
            d.setName(FindRecord1(meals.getMeals().get(i).getstrMeal()).getName());
            d.setCount(FindRecord1(meals.getMeals().get(i).getstrMeal()).getCount()+1);
            update(d);
            JOptionPane.showMessageDialog(null,"Η εγγραφή υπάρχει ήδη");
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MealsData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MealsData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MealsData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MealsData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MealsData().setVisible(true);
            }
        });
    }
    private void SearchMeal(String Name) {
        String urltocall="https://www.themealdb.com/api/json/v1/1/search.php?s="+Name;
        OkHttpClient client=new OkHttpClient();
        Request request = new Request.Builder().url(urltocall).build();
        try (Response response = client.newCall(request).execute()) {
            if (response.isSuccessful() && response.body() != null) {
                String responseString=response.body().string();
                DefaultTableModel model = (DefaultTableModel) DataTable.getModel();
                DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
                JTextArea area=(JTextArea) Instructions;
                Gson gson= new Gson();
                meals = new MealsData1();
                meals =gson.fromJson(responseString, MealsData1.class);
                if( meals.getMeals()!=null)
                        for(int i=0; i<meals.getMeals().size(); i++){
                            model1.setRowCount(i);
                            model1.addRow(new Object[]{meals.getMeals().get(i).getstrMeal()});
                           }
                        else{
                        JOptionPane.showMessageDialog(null,"Δεν βρέθηκαν δεδομένα"); 
                        }
                         
            jTable1.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 1) {
                    model.setRowCount(0);
                    area.setText(null);
                    // Get the selected item from the List
                    model.addRow(new Object[]{meals.getMeals().get(jTable1.getSelectedRow()).getstrMeal(),meals.getMeals().get(jTable1.getSelectedRow()).getCategory(),meals.getMeals().get(jTable1.getSelectedRow()).getArea()});
                    area.insert(meals.getMeals().get(jTable1.getSelectedRow()).getstrInstuctions(),0 );
                           }
                       }
                });

            }
        }
    
    catch (IOException e){
            e.printStackTrace();
        }      
  
    }
   
    
private static void insertdata(String Name, String Area, String Category, String Instructions, int count){
    createEMFandEM();
    em.getTransaction().begin();
    Data d = new Data();
    d.setName(Name);
    d.setCount(count);
    d.setArea(Area);
    d.setCategory(Category);
    d.setInstructions(Instructions);
    em.persist(d);
    em.getTransaction().commit();
    em.close();
    emf.close();
}

private static void DeleteData(String Name){
    createEMFandEM();
    em.getTransaction().begin();
    Data d=em.find(Data.class, Name);
    em.remove(d);
    em.getTransaction().commit();
    em.close();
    emf.close();
}
private static boolean FindRecord(String name){
    createEMFandEM();
    Data d=em.find(Data.class, name);
    if(d!=null)
       return true;
    else
    return false;
}
private static void update(Data d){
    if(FindRecord(d.getName())){
    createEMFandEM();
    em.getTransaction().begin();
    Data update=em.merge(d);
    em.getTransaction().commit();
    em.close();
    emf.close();
    }
}
private static Data FindRecord1(String name){
    createEMFandEM();
    Data d=em.find(Data.class, name);
    if(d!=null)
       return d;
    else
        return null;
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable DataTable;
    private javax.swing.JTextArea Instructions;
    private javax.swing.JTextField NameOfMeal;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}